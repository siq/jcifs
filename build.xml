<project name="jcifs" default="usage" basedir=".">

    <property name="version" value="1.3.17-flx.1"/>
    <property name="reldate" value="Jan. 9, 2013"/>
    <property file="build.properties"/>

    <path id="classpath">
        <fileset dir="lib"><include name="**/*.jar"/></fileset>
    </path>

    <target name="usage">
        <echo>
Available Build Targets:

dependencies: Checks that all class dependencies are met.
     compile: Builds the jCIFS classes.
         jar: Packages the jCIFS classes into a .jar file.
        docs: XSLT generated website pages
     javadoc: Creates the Javadoc API documentation.
         all: Performs all of the above.

       clean: Removes build artifacts.
    allclean: Removes distribution and build artifacts.  This
              includes the .jar file, .class files, and
              the Javadoc API documentation.

       jcifs: Builds the "all" target, followed by "clean".  This
              reproduces the distribution package contents.
     distrib: Builds the "jcifs" target, and additionally
              recreates the .zip and .tgz downloadable
              distributions.
    checksum: Creates MD5 checksums of the .zip and .tgz
              distributions.

       usage: Displays this message.</echo>
    </target>

    <target name="hasServlet" unless="hasServlet">
        <fail>

    The Java Servlet API classes could not be found.  These files can be
    obtained from:

        http://java.sun.com/products/servlet/download.html
        </fail>
    </target>

    <target name="dependencies">
        <!--<available classname="javax.servlet.Servlet" property="hasServlet"/>-->
        <!--<antcall target="hasServlet"/>-->
    </target>

    <target name="compile" depends="dependencies">
        <mkdir dir="build"/>
        <javac srcdir="src"
            destdir="build"
            source="1.5"
            target="1.5"
            fork="yes"
            debug="${javac.debug}"
            debugLevel="${javac.debugLevel}">
            <classpath refid="classpath"></classpath>
        </javac>
    </target>

    <target name="jar" depends="compile">
        <mkdir dir="dist"/>
        <jar jarfile="dist/jcifs-${version}.jar">
            <manifest>
                <attribute name="Bundle-Version" value="${version}"/>
                <attribute name="Bundle-Name" value="jcifs"/>
                <attribute name="Bundle-ManifestVersion" value="2"/>
                <attribute name="Bundle-SymbolicName" value="jcifs"/>
                <attribute name="Export-Package" value="jcifs, jcifs.dcerpc, jcifs.dcerpc.msrpc, jcifs.http, jcifs.https, jcifs.netbios, jcifs.ntlmssp, jcifs.smb, jcifs.util, jcifs.util.transport"/>
            </manifest>
            <fileset dir="build"/>
        </jar>
    </target>

    <target name="javadoc">
        <delete dir="docs/api" quiet="true"/>
        <mkdir dir="docs/api"/>
        <javadoc destdir="docs/api" overview="docs/overview.html" author="true" version="true" use="true" windowtitle="JCIFS API">
            <fileset dir="src">
                <include name="jcifs/Config.java"/>
                <include name="jcifs/UniAddress.java"/>
                <include name="jcifs/netbios/NbtAddress.java"/>
                <include name="jcifs/smb/ACE.java"/>
                <include name="jcifs/smb/DosFileFilter.java"/>
                <include name="jcifs/smb/NtlmAuthenticator.java"/>
                <include name="jcifs/smb/NtlmContext.java"/>
                <include name="jcifs/smb/NtlmPasswordAuthentication.java"/>
                <include name="jcifs/smb/SID.java"/>
                <include name="jcifs/smb/SmbAuthException.java"/>
                <include name="jcifs/smb/SmbException.java"/>
                <include name="jcifs/smb/SmbFileFilter.java"/>
                <include name="jcifs/smb/SmbFileInputStream.java"/>
                <include name="jcifs/smb/SmbFile.java"/>
                <include name="jcifs/smb/SmbFilenameFilter.java"/>
                <include name="jcifs/smb/SmbFileOutputStream.java"/>
                <include name="jcifs/smb/SmbNamedPipe.java"/>
                <include name="jcifs/smb/SmbRandomAccessFile.java"/>
                <include name="jcifs/util/LogStream.java"/>
                <include name="jcifs/util/RC4.java"/>
                <include name="jcifs/util/HMACT64.java"/>
                <include name="jcifs/util/Base64.java"/>
            </fileset>
            <classpath>
                <pathelement path="${java.class.path}"/>
                <fileset dir=".">
                    <include name="**/*.jar"/>
                </fileset>
            </classpath>
        </javadoc>
        <!--copy file="docs/allclasses-frame.html" tofile="docs/api/allclasses-frame.html" overwrite="yes"/-->
    </target>

    <target name="all" depends="jar,javadoc"/>

    <target name="clean">
        <delete dir="build" quiet="true"/>
        <delete dir="dist" quiet="true"/>
    </target>

    <target name="allclean" depends="clean">
        <delete quiet="true">
            <fileset dir=".">
                <include name="jcifs-${version}.zip"/>
                <include name="jcifs-${version}.zip.MD5"/>
                <include name="jcifs-${version}.tgz"/>
                <include name="jcifs-${version}.tgz.MD5"/>
                <include name="jcifs-${version}.jar"/>
            </fileset>
        </delete>
        <delete dir="docs/api" quiet="true"/>
        <delete quiet="true">
            <fileset dir="docs">
                <include name="index.html"/>
                <include name="pipes.html"/>
                <include name="faq.html"/>
                <include name="wins.html"/>
                <include name="capture.html"/>
                <include name="httpclient.html"/>
                <include name="resolver.html"/>
                <include name="authhandler.html"/>
                <include name="ntlmhttpauth.html"/>
            </fileset>
        </delete>
    </target>

    <target name="jcifs" depends="all,clean"/>

</project>
